#!/usr/bin/env groovy
node('master') {
    def branchToBuild = 'master'
    def serviceDir = 'smart-suppression'
    def appDir = 'app'
    def capistranoDir = 'capistrano'


    def mvn = "${tool 'maven-3'}/bin/mvn".toString()
    def java = "${tool 'JDK-1.8'}/bin/java".toString()

    try {

        stage('\u2780 Checkout') {
            echo "Branch ${branchToBuild} "
            dir(appDir) {
                git url: 'git@assembla.contactlab.com:platform-content-message.smart-suppression.git', branch: branchToBuild
                sh "git submodule init"
                sh "git submodule sync"
                sh "git submodule update --force --checkout"
                sh "${mvn} -f pom.xml  build-helper:parse-version versions:set -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.incrementalVersion}-${env.BUILD_NUMBER}"
            }
        }

        stage('\u2781 Test') {
            dir(appDir) {
                sh "${mvn} -f pom.xml clean test -P coverage"
            }
        }

//        stage('\u2782 run service') {
//            dir(appDir) {
//                sh "${mvn} -f pom.xml package -P coverage"
//                def pom = readMavenPom file: 'pom.xml'
//                sh "${java} " +
//                        "-Dakka.remote.netty.tcp.port=2600" +
//                        " -Djava.security.krb5.conf=configuration/jenkins/krb5.conf " +
//                        "-Dengine.config.file=configuration/jenkins/smartsend.conf " +
//                        "-Dlogback.configurationFile=configuration/jenkins/logback.xml " +
//                        "-Dconfig.file=configuration/jenkins/application.conf " +
//                        "-Djava.security.auth.login.config=configuration/jenkins/kafka-jaas.conf " +
//                        "-jar target/smart-handlers-${pom.version}.jar > smart-suppression.log &"
//            }
//        }

//        stage('\u2783 integration test') {
//            dir(appDir) {
//                sleep 20
//                sh "${mvn} -f pom.xml -Dtest=IntegrationTestSuite -DfailIfNoTests=false  test -P coverage"
//            }
//        }

//        stage('\u2784 kill service') {
//            killService()
//        }

        stage('\u2785 deploy on nexus') {
            dir(appDir) {
                sh "${mvn} -f pom.xml deploy  -Dmaven.test.skip=true"
            }
        }

        lock('smartsuppression-staging') {
            stage('\u2786 deploy on stage') {
                dir(capistranoDir) {
                    // Checkout Capistrano scripts for deploy
                    git poll: false, url: 'git@assembla.contactlab.com:platform-deployment.git', branch: 'master'
                    // Deploy to chosen environment
                    deploy()
                }
            }

//            stage('\u2787 acceptance test') {
//                dir(appDir) {
//                    sleep 10
//                    sh "${mvn} -f pom.xml -Dtest=IntegrationTestSuite -DfailIfNoTests=false  test -P acceptance"
//                }
//            }
        }

        stage('\u2788 static analysis and upload') {
            dir(appDir) {
                sh "${mvn} -f pom.xml sonar:sonar"
            }
        }


        currentBuild.result = 'SUCCESS'
    } catch (exc) {
        currentBuild.result = 'FAILURE'
        notifyBuild((String) currentBuild.result, "stage", branchToBuild)
        throw exc
    } finally {
        killService()
        //junit 'app/smart-handlers/target/surefire-reports/*.xml'
    }
}

def killService() {
    def pid = sh (script: 'echo \$(ps augxw | grep java | grep smart-suppression| awk \'{print \$2}\') ', returnStdout:true)
    echo "pid ${pid}"

    if (pid.trim()){
        sh "kill -9 ${pid}"
    }
}

def deploy() {

    dir('app/smart-suppression') {

        println("Start Capistrano deploy")

        // Build Capistrano script by String concatenation.
        def script = '''#!/bin/bash -l
                source ~/.rvm/scripts/rvm && rvm use 2.2.4 && bundle install '''
        script += " && bundle exec cap staging nexus:rebuild_metadata "
        script += " && bundle exec cap staging deploy "
        script += " && bundle exec cap staging service:restart"

        echo("${script}")
        sh "${script}"

        println("End Capistrano deploy")
    }
}

def notifyBuild(String buildStatus, String deployEnv, String branchToBuild) {

    final API_FAIL_WEBHOOK = 'https://outlook.office.com/webhook/ef926065-bec9-4f4f-886c-abafe5f90882@08566e73-0a0a-4754-b5e6-929162ec4325/IncomingWebhook/0a19fa97f2ef4a8496a6600a3c4baa4a/e33f0c86-0215-4fdb-8c24-db292803c76c'
    def teamsColorCode
    def webHook

    switch (buildStatus) {
        case 'STARTED':
            teamsColorCode = 'BDC3C7'
            break
        case 'SUCCESS':
            teamsColorCode = '2ECC71'
            break
        default:
            teamsColorCode = 'E74C3C'
            webHook = API_FAIL_WEBHOOK
    }

    // Build Microsoft Teams body
    def teamsBody = "{\"@type\": \"MessageCard\"," +
            "\"summary\": \"${env.JOB_NAME} [#${env.BUILD_NUMBER}]: Pipeline ${buildStatus}.\"," +
            "\"title\": \"Pipeline ${buildStatus}\"," +
            "\"themeColor\": \"${teamsColorCode}\"," +
            "\"sections\": [{\"facts\": [" +
            "{\"name\": \"Project:\"," +
            "\"value\": \"${env.JOB_NAME}\"}," +
            "{\"name\": \"Branch:\"," +
            "\"value\": \"${branchToBuild}\"}," +
            "{\"name\": \"Environment:\"," +
            "\"value\": \"${deployEnv}\"}]}]," +
            "\"potentialAction\": [{" +
            "\"@type\": \"ViewAction\"," +
            "\"name\": \"View in Jenkins\"," +
            "\"target\": [\"${env.BUILD_URL}\"]}]}"

    if (webHook) {
        //       sh "curl -H 'Content-Type: application/json' -d '${teamsBody}' ${webHook}"
    }

}
